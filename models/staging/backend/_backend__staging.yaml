version: 2

models:

  # ────────────────────────────────
  # BOOKINGS
  # ────────────────────────────────
  - name: stg_backend__booking
    description: "Flattened booking-level data extracted from nested JSON (one row per booking)."
    columns:
      - name: booking_id
        description: "Unique identifier of the booking."
        tests: [unique, not_null]
      - name: created_at_timestamp
        description: "Timestamp when the booking was created."
      - name: updated_at_timestamp
        description: "Timestamp when the booking record was last updated."
      - name: partner_id
        description: "External partner or vendor that facilitated the booking."
      - name: user_selected_currency
        description: "User-selected currency code for the booking."
      - name: uploaded_at_timestamp
        description: "Ingestion timestamp of the raw record."

  # ────────────────────────────────
  # SEGMENTS
  # ────────────────────────────────
  - name: stg_backend__segment
    description: "Flattened segment-level data (one row per travel leg within a booking)."
    columns:
      - name: segment_id
        description: "Unique segment identifier."
        tests: [unique, not_null]
      - name: booking_id
        description: "Parent booking reference."
        tests:
          - relationships:
              to: ref('stg_backend__booking')
              field: booking_id
      - name: carrier_name
        description: "Carrier or operator for this travel segment."
      - name: departure_time_timestamp
        description: "Departure timestamp."
      - name: arrival_time_timestamp
        description: "Arrival timestamp."
      - name: travel_mode
        description: "Type of transportation (flight, bus, train, etc.)."
      - name: uploaded_at_timestamp
        description: "Ingestion timestamp."

  # ────────────────────────────────
  # PASSENGERS
  # ────────────────────────────────
  - name: stg_backend__passenger
    description: "Passenger-level data extracted from bookings JSON."
    columns:
      - name: passenger_id
        description: "Unique passenger identifier."
        tests: [unique, not_null]
      - name: booking_id
        description: "Parent booking reference."
        tests:
          - relationships:
              to: ref('stg_backend__booking')
              field: booking_id
      - name: type
        description: "Passenger type (adult, child, infant)."
      - name: uploaded_at
        description: "Ingestion timestamp."

  # ────────────────────────────────
  # TICKETS
  # ────────────────────────────────
  - name: stg_backend__ticket
    description: "Ticket-level data (each ticket purchased within a booking)."
    columns:
      - name: ticket_id
        description: "Unique ticket identifier."
        tests: [unique, not_null]
      - name: booking_id
        description: "Parent booking reference."
        tests:
          - relationships:
              to: ref('stg_backend__booking')
              field: booking_id
      - name: booking_price
        description: "Price paid for the ticket."
      - name: booking_currency
        description: "Currency used for the ticket payment."
      - name: vendor_code
        description: "Vendor or airline that issued the ticket."
      - name: uploaded_at
        description: "Ingestion timestamp."

  # ────────────────────────────────
  # TICKET ↔ SEGMENT
  # ────────────────────────────────
  - name: stg_backend__ticket_segment
    description: "Join table linking tickets to their corresponding travel segments."
    columns:
      - name: ticket_id
        description: "Ticket identifier."
        tests:
          - relationships:
              to: ref('stg_backend__ticket')
              field: ticket_id
      - name: segment_id
        description: "Segment identifier."
        tests:
          - relationships:
              to: ref('stg_backend__segment')
              field: segment_id
      - name: booking_id
        description: "Parent booking reference."
      - name: uploaded_at
        description: "Ingestion timestamp."

  # ────────────────────────────────
  # TICKET ↔ PASSENGER
  # ────────────────────────────────
  - name: stg_backend__ticket_passenger
    description: "Join table mapping tickets to passengers (receipt-level linkage)."
    columns:
      - name: ticket_id
        description: "Ticket identifier."
        tests:
          - relationships:
              to: ref('stg_backend__ticket')
              field: ticket_id
      - name: passenger_id
        description: "Passenger identifier."
        tests:
          - relationships:
              to: ref('stg_backend__passenger')
              field: passenger_id
      - name: booking_id
        description: "Parent booking reference."
      - name: uploaded_at
        description: "Ingestion timestamp."